module = {}

local glyphs = {
    {' ', {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    -- {'!', {0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00}},
    {'"', {0x00,0x70,0x50,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    -- {'#', {0x00,0x00,0x14,0x14,0x7E,0x14,0x14,0x28,0x7E,0x28,0x28}},
    -- {'$', {0x00,0x10,0x38,0x54,0x54,0x50,0x30,0x18,0x14,0x54,0x54}},
    -- {'%', {0x00,0x00,0x44,0xA4,0xA8,0xA8,0x50,0x14,0x2A,0x2A,0x4A}},
    -- {'&', {0x00,0x00,0x20,0x50,0x50,0x50,0x7C,0xA8,0xA8,0x98,0x88}},
    {'\'', {0x00,0x60,0x60,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00}},
    {'(', {0x00,0x18,0x38,0x60,0x60,0x60,0x60,0x60,0x38,0x18,0x00}},
    {')', {0x00,0x18,0x1C,0x06,0x06,0x06,0x06,0x06,0x1C,0x18,0x00}},
    {'*', {0x00,0x00,0x08,0x2A,0x1C,0x3E,0x1C,0x2A,0x08,0x00,0x00}},
    {'+', {0x00,0x00,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x00,0x00}},
    {',', {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x08,0x30,0x00,0x00}},
    {'-', {0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00}},
    {'.', {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00}},
    {'/', {0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x40,0x00,0x00,0x00}},
    {'0', {0x00,0x18,0x3C,0x66,0x66,0x66,0x66,0x66,0x3C,0x18,0x00}},
    {'1', {0x00,0x08,0x18,0x38,0x18,0x18,0x18,0x18,0x3C,0x3C,0x00}},
    {'2', {0x00,0x3C,0x7E,0x66,0x06,0x3E,0x7C,0x60,0x7E,0x7E,0x00}},
    {'3', {0x00,0x7E,0x7E,0x06,0x0C,0x1C,0x06,0x66,0x7E,0x3C,0x00}},
    {'4', {0x00,0x6C,0x6C,0x6C,0x6C,0x7E,0x7E,0x0C,0x0C,0x0C,0x00}},
    {'5', {0x00,0x7E,0x7E,0x60,0x7C,0x7E,0x06,0x66,0x7E,0x3C,0x00}},
    {'6', {0x00,0x3C,0x7E,0x60,0x7C,0x7E,0x66,0x66,0x7E,0x3C,0x00}},
    {'7', {0x00,0x7E,0x7E,0x06,0x06,0x0C,0x18,0x30,0x30,0x30,0x00}},
    {'8', {0x00,0x3C,0x7E,0x66,0x7E,0x3C,0x66,0x66,0x7E,0x3C,0x00}},
    {'9', {0x00,0x3C,0x7E,0x66,0x66,0x7E,0x3E,0x06,0x3E,0x3C,0x00}},
    {':', {0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x00,0x00}},
    -- {';', {0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x08,0x08}},
    -- {'<', {0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x40,0x20,0x10,0x08}},
    -- {'=', {0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0x00,0xFE,0x00,0x00}},
    -- {'>', {0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x02,0x04,0x08,0x10}},
    -- {'?', {0x00,0x00,0x3C,0x42,0x42,0x42,0x02,0x04,0x08,0x08,0x00}},
    -- {'@', {0x00,0x70,0x50,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, -- degree symbol in f18
    {'A', {0x00,0x18,0x3C,0x7E,0x66,0x66,0x7E,0x7E,0x66,0x66,0x00}},
    {'B', {0x00,0x7C,0x7E,0x66,0x7C,0x7C,0x66,0x66,0x7E,0x7C,0x00}},
    {'C', {0x00,0x3C,0x7E,0x66,0x60,0x60,0x60,0x66,0x7E,0x3C,0x00}},
    {'D', {0x00,0x7c,0x3E,0x36,0x36,0x36,0x36,0x36,0x3E,0x7C,0x00}},
    {'E', {0x00,0x7E,0x7E,0x60,0x78,0x78,0x60,0x60,0x7E,0x7E,0x00}},
    {'F', {0x00,0x7E,0x7E,0x60,0x78,0x78,0x78,0x60,0x60,0x60,0x00}},
    {'G', {0x00,0x3C,0x7E,0x66,0x60,0x6E,0x6E,0x66,0x7E,0x3E,0x00}},
    {'H', {0x00,0x66,0x66,0x66,0x7E,0x7E,0x66,0x66,0x66,0x66,0x00}},
    {'I', {0x00,0x7E,0x7E,0x18,0x18,0x18,0x18,0x18,0x7E,0x7E,0x00}},
    {'J', {0x00,0x7E,0x7E,0x18,0x18,0x18,0x18,0x58,0x78,0x38,0x00}},
    {'K', {0x00,0x66,0x66,0x6C,0x78,0x70,0x78,0x6C,0x66,0x66,0x00}},
    {'L', {0x00,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x7E,0x7E,0x00}},
    {'M', {0x00,0x42,0x66,0x7E,0x7E,0x66,0x66,0x66,0x66,0x66,0x00}},
    {'N', {0x00,0x46,0x66,0x76,0x76,0x6E,0x6E,0x66,0x66,0x62,0x00}},
    {'O', {0x00,0x3C,0x7E,0x66,0x66,0x66,0x66,0x66,0x7E,0x3C,0x00}},
    {'P', {0x00,0x7C,0x7E,0x66,0x66,0x7E,0x7C,0x60,0x60,0x60,0x00}},
    {'Q', {0x00,0x3C,0x7E,0x66,0x66,0x66,0x6E,0x7C,0x3C,0x06,0x00}},
    {'R', {0x00,0x7C,0x7E,0x66,0x66,0x7C,0x7C,0x6C,0x66,0x66,0x00}},
    {'S', {0x00,0x3C,0x7E,0x60,0x7C,0x3E,0x06,0x06,0x7E,0x3C,0x00}},
    {'T', {0x00,0x7E,0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00}},
    {'U', {0x00,0x66,0x66,0x66,0x66,0x66,0x66,0x66,0x7E,0x3c,0x00}},
    {'V', {0x00,0x66,0x66,0x66,0x66,0x66,0x24,0x3C,0x3C,0x18,0x00}},
    {'W', {0x00,0x66,0x66,0x66,0x66,0x66,0x7E,0x7E,0x66,0x42,0x00}},
    {'X', {0x00,0x66,0x66,0x24,0x3C,0x18,0x3C,0x24,0x66,0x66,0x00}},
    {'Y', {0x00,0x66,0x66,0x24,0x3C,0x18,0x18,0x18,0x18,0x18,0x00}},
    {'Z', {0x00,0x7E,0x7E,0x06,0x0C,0x18,0x30,0x60,0x7E,0x7E,0x00}},
    -- {'[', {0x00,0x3C,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20}},
    -- {'\\', {0x00,0x40,0x40,0x20,0x20,0x10,0x10,0x10,0x08,0x08,0x04}},
    -- {']', {0x00,0x3C,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04}},
    {'^', {0x00,0x18,0x3C,0x7E,0x00,0x00,0x00,0x7E,0x3C,0x18,0x00}},
    {'_', {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0x00,0x00}},
    {'`', {0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x08,0x00,0x00,0x00}},
    {'a', {0x00,0x18,0x3C,0x7E,0x00,0x00,0x00,0x7E,0x3C,0x18,0x00}}, -- up/down rocker symbol
    -- {'b', {0x00,0x00,0xC0,0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x42}},
    -- {'c', {0x00,0x00,0x00,0x00,0x1C,0x22,0x40,0x40,0x40,0x22,0x1C}},
    -- {'d', {0x00,0x77,0x41,0x22,0x14,0x00,0x00,0x00,0x00,0x00,0x00}}, -- antenna symbol in the F-18
    -- {'e', {0x00,0x00,0x00,0x00,0x3C,0x42,0x7E,0x40,0x40,0x42,0x3C}},
    -- {'f', {0x00,0x00,0x0E,0x12,0x10,0x7C,0x10,0x10,0x10,0x10,0x10}},
    -- {'g', {0x00,0x00,0x00,0x3E,0x44,0x44,0x38,0x40,0x3C,0x42,0x42}},
    -- {'h', {0x00,0x00,0xC0,0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x42}},
    -- {'i', {0x00,0x00,0x30,0x30,0x00,0x70,0x10,0x10,0x10,0x10,0x10}},
    -- {'j', {0x00,0x0C,0x0C,0x00,0x1C,0x04,0x04,0x04,0x04,0x04,0x04}},
    -- {'k', {0x00,0x00,0xC0,0x40,0x40,0x4E,0x48,0x50,0x68,0x48,0x44}},
    -- {'l', {0x00,0x00,0x70,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10}},
    -- {'m', {0x00,0x00,0x00,0x00,0xF8,0x54,0x54,0x54,0x54,0x54,0xD6}},
    -- {'n', {0x00,0x00,0x00,0x00,0xDC,0x62,0x42,0x42,0x42,0x42,0xE7}},
    {'o', {0x00,0x70,0x50,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}, -- degree symbol
    -- {'p', {0x00,0x00,0x00,0xDC,0x62,0x42,0x42,0x42,0x42,0x7C,0x40}},
    -- {'q', {0x00,0x00,0x00,0x7C,0x84,0x84,0x84,0x84,0x8C,0x74,0x04}},
    -- {'r', {0x00,0x00,0x00,0x00,0xEE,0x32,0x20,0x20,0x20,0x20,0xF8}},
    -- {'s', {0x00,0x00,0x00,0x00,0x3C,0x44,0x40,0x38,0x04,0x44,0x78}},
    -- {'t', {0x00,0x00,0x00,0x10,0x10,0x7C,0x10,0x10,0x10,0x10,0x10}},
    -- {'u', {0x00,0x00,0x00,0x00,0xC6,0x42,0x42,0x42,0x42,0x46,0x3B}},
    -- {'v', {0x00,0x00,0x00,0x00,0xE7,0x42,0x24,0x24,0x28,0x10,0x10}},
    -- {'w', {0x00,0x00,0x00,0x00,0xD6,0x54,0x54,0x54,0x28,0x28,0x28}},
    -- {'x', {0x00,0x00,0x00,0x00,0x6E,0x24,0x18,0x18,0x18,0x24,0x76}},
    -- {'y', {0x00,0x00,0x00,0xE7,0x42,0x24,0x24,0x28,0x18,0x10,0x10}},
    -- {'z', {0x00,0x00,0x00,0x00,0x7E,0x44,0x08,0x10,0x10,0x22,0x7E}},
}

local v_units = 11
local h_units = 8

local function draw_glyph(rctx, unit, patterns, offset, inverted)
    for y, pattern in ipairs(patterns) do
        pattern = inverted and (~pattern & 0xff) or pattern
        for x = 1, 8 do
            if pattern & (128 >> (x - 1)) ~= 0 then
                rctx:fill_rectangle(offset + (x - 1) * unit, (y - 1) * unit, unit, unit)
            end
        end
    end
end

function module.generate_fonts(height, color)
    color = color or graphics.color(171, 205, 83)
    local font = {}
    font .unit = height / v_units
    font.height = height
    font.width = font.unit * h_units
    local bm_width = font.width * #glyphs
    local bm_height = font.height
    
    font.normal_bitmap = graphics.bitmap(bm_width, bm_height)
    font.inverted_bitmap = graphics.bitmap(bm_width, bm_height)
    font.normal = graphics.bitmap_font()
    font.inverted = graphics.bitmap_font()

    for _, ctx in pairs{{font.normal_bitmap, false, font.normal}, {font.inverted_bitmap, true, font.inverted}} do
        local rctx = graphics.rendering_context(ctx[1])
        rctx.brush = color
        local offset = 0
        for _, def in ipairs(glyphs) do
            draw_glyph(rctx, font.unit, def[2], offset, ctx[2])
            offset = offset + font.width
        end
        rctx:finish_rendering()

        local offset = 0
        for _, def in ipairs(glyphs) do
            local glyph = ctx[1]:create_partial_bitmap(offset, 0, font.width, font.height)
            ctx[3]:add_glyph(def[1], glyph)
            offset = offset + font.width
        end
    end

    font.codepoints = ''
    for _, def in ipairs(glyphs) do
        font.codepoints = font.codepoints .. def[1]
    end

    return font
end

return module
